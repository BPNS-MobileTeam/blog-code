buildscript {
    ext {
        querydslVersion = "4.3.1"
    }
}

plugins {
    id 'org.springframework.boot' version '2.3.9.RELEASE' apply false
    id 'pl.exsio.querydsl.entityql' version "0.0.12"
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'idea'
    id 'maven'
}

group = 'com.jojoldu.blogcode'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation('com.vladmihalcea:hibernate-types-52:2.10.0')

    compile("com.querydsl:querydsl-core") // querydsl
    compile("com.querydsl:querydsl-jpa") // querydsl
    annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jpa" // querydsl JPAAnnotationProcessor 사용 지정
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")

    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-web')

    implementation("com.querydsl:querydsl-sql-spring:${querydslVersion}") // querydsl-sql
    implementation("com.github.eXsio:querydsl-entityql:3.1.0") // entityql
    implementation("org.reflections:reflections:0.9.11") // entityql
    implementation("joda-time:joda-time:2.9.4") // querydsl-sql

    runtimeOnly('com.h2database:h2')
    implementation('org.mariadb.jdbc:mariadb-java-client')

    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok'

    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

test {
    useJUnitPlatform()
}

// entityQL
def generatedSql='src/main/generated_sql'
def defaultPackage = 'com.jojoldu.blogcode.querydsl.domain.'
entityql {
    generators = [
            generator = {
                type = 'JPA'
//                sourcePackage = 'com.jojoldu.blogcode.querydsl.domain' //
                sourceClasses = [
                        defaultPackage+'pointevent.PointEvent',
                        defaultPackage+'student.Student',
                        defaultPackage+'academy.Academy',
                        defaultPackage+'book.Book',
                        defaultPackage+'book.store.BookStore',
                ]
                destinationPackage = defaultPackage+'sql'
                destinationPath = file(generatedSql).absolutePath
                filenamePattern = 'E%s.java'
            }
    ]
}

sourceSets {
    main.java.srcDirs += [ generatedSql ]
}
idea.module.generatedSourceDirs += file(generatedSql)

clean.doLast {
    file(generatedSql).deleteDir()
}

// querydsl-jpa 적용
def generatedJpa='src/main/generated'
sourceSets {
    main.java.srcDirs += [ generatedJpa ]
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(generatedJpa)
}

clean.doLast {
    file(generatedJpa).deleteDir()
}

dependencyManagement {
    imports {
        mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
    }
}


