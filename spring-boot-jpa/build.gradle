plugins {
	id 'org.springframework.boot' version '2.4.4' apply false
	id "io.spring.dependency-management" version "1.0.11.RELEASE"
	id 'java'
	id 'java-library'
	id 'idea'
}

repositories {
	mavenCentral()
	jcenter()
	maven { url 'https://jitpack.io' }
}

group = 'com.jojoldu.blogcode'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.projectlombok:lombok'

	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation 'com.h2database:h2'

	implementation("org.springframework.boot:spring-boot-starter-data-jpa")
	implementation("com.querydsl:querydsl-jpa")
	implementation("com.querydsl:querydsl-core")
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa" // querydsl JPAAnnotationProcessor 사용 지정
	annotationProcessor "jakarta.persistence:jakarta.persistence-api:2.2.3"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api:1.3.5"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}


// querydsl 적용
def generated='src/main/generated'
sourceSets.main.java.srcDirs += [generated]

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}

clean.doLast {
	file(generated).deleteDir()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
